---
import { ofetch } from "ofetch"
import {
  IconCalendarEvent,
} from "@tabler/icons-preact"
interface Post {
  title: string
  link: string
  description: string
  content: string
  enclosure: {
    link: string
    type: string
  }
  pubDate: string
}
interface ZennContent {
  items: Post[]
}
const data: ZennContent = await ofetch<ZennContent>("https://api.rss2json.com/v1/api.json?rss_url=https://zenn.dev/p/trans/feed", {
  parseResponse: JSON.parse,
}) // fetch latest Zenn Post
---
<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
  {
    data.items.map((post: Post) => {
      return <div class="border p-4 rounded-md">
        <div>
          <img src={post.enclosure.link} alt={post.title} class="w-full" />
        </div>
        <div>
          <div>
            <IconCalendarEvent />
            <span>{(() => {
              const dates = post.pubDate.split(/[- :]/g)
              return `${dates[0]}/${dates[1]}/${dates[2]}`
            })()}</span>
          </div>
        </div>
        <div>
          <p>{ post.description.slice(0,40) + "..." }</p>
        </div>
        <div>
          <a href={post.link} class="link" >Show moreðŸ‘‰</a>
        </div>
      </div>
    })
  }
</div>